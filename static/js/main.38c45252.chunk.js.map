{"version":3,"sources":["redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/Contacts/ContactItem/ContactItemStyled.js","components/Contacts/ContactItem/DeleteButtonStyled.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/ContactList/ContactList.js","components/Form/ContactFormStyled.js","components/Form/FormButtonStyled.js","components/Form/ContactForm.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["actions","addContact","createAction","name","number","payload","id","v4","deleteContact","filterContacts","contactsReducer","createReducer","state","some","contact","alert","filter","filterReducer","_","reducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","contacts","persistReducer","contactsStore","persistor","persistStore","ContactItemStyled","styled","li","DeleteButtonStyled","button","ContactItem","info","onDeleteContact","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","connect","contactList","dispatch","map","item","ContactFormStyled","form","FormButtonStyled","ContactForm","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","reset","onSubmit","this","className","htmlFor","type","pattern","title","required","onChange","Component","obj","FilterStyled","div","target","filterId","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.38c45252.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: v4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst filterContacts = createAction('contacts/filter');\r\n\r\nconst actions = {\r\n  addContact,\r\n  deleteContact,\r\n  filterContacts,\r\n};\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport actions from './phonebook-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contactsReducer = createReducer([...initialState], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const isInContacts = state.some(contact => contact.name === payload.name);\r\n    if (!isInContacts) {\r\n      return [...state, payload];\r\n    }\r\n    alert(`${payload.name} is already in contacts`);\r\n    return state;\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import logger from 'redux-logger';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  //devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst contactsStore = { store, persistor };\r\n\r\nexport default contactsStore;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactItemStyled = styled.li`\r\n  font-size: 18px;\r\n  margin-left: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default ContactItemStyled;\r\n","import styled from 'styled-components';\r\n\r\nconst DeleteButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin-left: 20px;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  font-size: 14px;\r\n  background-color: #dcdcdc;\r\n  border: 1px solid #696969;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #808080;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport default DeleteButtonStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItemStyled from './ContactItemStyled';\r\nimport DeleteButtonStyled from './DeleteButtonStyled';\r\n\r\nconst ContactItem = ({ info: { name, number, id }, onDeleteContact }) => {\r\n  return (\r\n    <ContactItemStyled>\r\n      {name}: {number}\r\n      <DeleteButtonStyled onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </DeleteButtonStyled>\r\n    </ContactItemStyled>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../../redux/phonebook-actions';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      {contactList.map(item => (\r\n        <ContactItem\r\n          key={item.id}\r\n          info={item}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contactList: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styled from 'styled-components';\r\n\r\nconst ContactFormStyled = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border: 2px solid #000;\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  .label {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .input {\r\n    margin-bottom: 10px;\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nexport default ContactFormStyled;\r\n","import styled from 'styled-components';\r\n\r\nconst FormButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin-top: 20px;\r\n  padding: 6px 10px;\r\n  width: 250px;\r\n  background-color: #3f51b5;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nexport default FormButtonStyled;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'uuid';\r\nimport ContactFormStyled from './ContactFormStyled';\r\nimport FormButtonStyled from './FormButtonStyled';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = v4();\r\n  numberInputId = v4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactFormStyled onSubmit={this.handleSubmit}>\r\n        <label className=\"label\" htmlFor={this.nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={this.nameInputId}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className=\"label\" htmlFor={this.numberInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={this.numberInputId}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormButtonStyled>Add contact</FormButtonStyled>\r\n      </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: obj => dispatch(actions.addContact(obj)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import styled from 'styled-components';\r\n\r\nconst FilterStyled = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  .label {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default FilterStyled;\r\n","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/phonebook-actions';\r\nimport FilterStyled from './FilterStyled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const filterId = v4();\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"label\" htmlFor={filterId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input type=\"text\" value={value} onChange={onChange} id={filterId} />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  value: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport ContactList from './Contacts/ContactList';\nimport ContactForm from './Form';\nimport Filter from './Filter';\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}